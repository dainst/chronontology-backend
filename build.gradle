buildscript {
    ext.kotlin_version = '1.1.2'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'kotlin'

sourceCompatibility = 1.8

mainClassName = 'org.dainst.chronontology.App'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'commons-codec:commons-codec:1.5'
    compile 'org.skyscreamer:jsonassert:1.2.3'
    compile 'log4j:log4j:2.15.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    compile 'com.sparkjava:spark-core:2.3'
    testCompile 'org.testng:testng:6.9.9'
    testCompile 'org.mockito:mockito-all:1.8.4'
    compile 'org.elasticsearch:elasticsearch:2.4.5'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.4'
}

shadowJar {
    baseName = 'jeremy'
    classifier = null
    version = null
    mergeServiceFiles()
}

shadowJar.dependsOn test

test {
    useTestNG()
    scanForTestClasses = false
    include '**/*Test.class'

    testLogging {
        showStandardStreams = true

        // log results to "build/test-results" directory
        exceptionFormat "full"
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
